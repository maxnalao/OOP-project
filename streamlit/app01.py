import streamlit as st

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ß‡πá‡∏õ‡πÅ‡∏≠‡∏õ
st.sidebar.subheader(':red[‡πÄ‡∏•‡∏Ç‡∏ê‡∏≤‡∏ô‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°üìê]')

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏ñ‡∏ö‡∏Ç‡πâ‡∏≤‡∏á
menu_option = st.sidebar.radio("‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏•‡∏Ç‡∏ê‡∏≤‡∏ô", ['‡πÄ‡∏•‡∏Ç‡∏ê‡∏≤‡∏ô2', '‡πÄ‡∏•‡∏Ç‡∏ê‡∏≤‡∏ô3', '‡πÄ‡∏•‡∏Ç‡∏ê‡∏≤‡∏ô8', '‡πÄ‡∏•‡∏Ç‡∏ê‡∏≤‡∏ô16'])

# setbackground
def set_background(image_url):
    image_url_str = f'url("{image_url}")'
    css = f"""
    <style>
    .stApp {{
        background-image: {image_url_str};
        background-size: cover;
    }}
    </style>
    """
    st.markdown(css, unsafe_allow_html=True)

##‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ
set_background("https://png.pngtree.com/thumb_back/fh260/background/20220524/pngtree-linen-plain-clothing-material-map-image_1366872.jpg")

# ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
st.image('https://www.teachernu.com/wp-content/uploads/2018/12/%E0%B8%9A%E0%B8%A7%E0%B8%81%E0%B8%A5%E0%B8%9A%E0%B9%80%E0%B8%A5%E0%B8%82%E0%B8%90%E0%B8%B2%E0%B8%99.png')

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ß‡πá‡∏õ‡πÅ‡∏≠‡∏õ ‡∏Ç‡∏≠‡∏á ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏•‡∏Ç‡∏ê‡∏≤‡∏ô‡∏™‡∏≠‡∏á
def decimal_to_binary(n):
    if n == 0:
        return '0'
    ternary = ''
    while n:
        n, r = divmod(n, 2)
        ternary = str(r) + ternary
    return ternary

def binary_to_decimal(n):
    decimal = 0
    for i, digit in enumerate(reversed(str(n))):
        decimal += int(digit) * (2 ** i)
    return decimal

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ß‡πá‡∏õ‡πÅ‡∏≠‡∏õ ‡∏Ç‡∏≠‡∏á ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏•‡∏Ç‡∏ê‡∏≤‡∏ô‡∏™‡∏≤‡∏°
def decimal_to_ternary(n):
    if n == 0:
        return '0'
    ternary = ''
    while n:
        n, r = divmod(n, 3)
        ternary = str(r) + ternary
    return ternary

def ternary_to_decimal(n):
    decimal = 0
    for i, digit in enumerate(reversed(str(n))):
        decimal += int(digit) * (3 ** i)
    return decimal

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ß‡πá‡∏õ‡πÅ‡∏≠‡∏õ ‡∏Ç‡∏≠‡∏á ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏•‡∏Ç‡∏ê‡∏≤‡∏ô‡πÅ‡∏õ‡∏î
def decimal_to_octal(n):
    if n == 0:
        return '0'
    ternary = ''
    while n:
        n, r = divmod(n, 8)
        ternary = str(r) + ternary
    return ternary

def decimal_to_octall(n):
    decimal = 0
    for i, digit in enumerate(reversed(str(n))):
        decimal += int(digit) * (8 ** i)
    return decimal

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ß‡πá‡∏õ‡πÅ‡∏≠‡∏õ ‡∏Ç‡∏≠‡∏á ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏•‡∏Ç‡∏ê‡∏≤‡∏ô‡∏™‡∏¥‡∏ö‡∏´‡∏Å
def decimal_to_hexadecimal(n):
    if n == 0:
        return '0'
    ternary = ''
    while n:
        n, r = divmod(n, 16)
        ternary = str(r) + ternary
    return ternary

def hexadecimal_to_decimal(n):
    decimal = 0
    for i, digit in enumerate(reversed(str(n))):
        decimal += int(digit) * (16 ** i)
    return decimal

def main():
    if menu_option == '‡πÄ‡∏•‡∏Ç‡∏ê‡∏≤‡∏ô2':
        st.title(":red[‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏•‡∏Ç‡∏ê‡∏≤‡∏ô‡∏™‡∏≠‡∏á]")

        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡πâ‡∏≠‡∏ô
        option = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:", ["‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏•‡∏Ç‡∏ê‡∏≤‡∏ô‡∏™‡∏≠‡∏á", "‡∏ê‡∏≤‡∏ô‡∏™‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°"])

        # ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏•‡∏Ç‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°
        if option == "‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏•‡∏Ç‡∏ê‡∏≤‡∏ô‡∏™‡∏≠‡∏á":
         decimal_num = st.number_input("‡∏õ‡πâ‡∏≠‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°:", value=0, step=1)
         if st.button('‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏•‡∏Ç'):
           binary_num = decimal_to_binary(decimal_num)
           st.write(f"‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°‡∏Ç‡∏≠‡∏á {decimal_num} ‡∏Ñ‡∏∑‡∏≠: {binary_num}")

        # ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏•‡∏Ç‡∏ê‡∏≤‡∏ô
        elif option == "‡∏ê‡∏≤‡∏ô‡∏™‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°":
         binary_num = st.text_input("‡∏õ‡πâ‡∏≠‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°:")
         if st.button('‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏•‡∏Ç'):
            decimal_num = binary_to_decimal(binary_num)
            st.write(f"‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°‡∏Ç‡∏≠‡∏á {binary_num} ‡∏Ñ‡∏∑‡∏≠: {decimal_num}")
            

    if menu_option == '‡πÄ‡∏•‡∏Ç‡∏ê‡∏≤‡∏ô3':
        st.title(":red[‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏•‡∏Ç‡∏ê‡∏≤‡∏ô‡∏™‡∏≤‡∏°]")

        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡πâ‡∏≠‡∏ô
        option = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:", ["‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ê‡∏≤‡∏ô‡∏™‡∏≤‡∏°", "‡∏ê‡∏≤‡∏ô‡∏™‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°"])

        # ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏•‡∏Ç‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°
        if option == "‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ê‡∏≤‡∏ô‡∏™‡∏≤‡∏°":
         decimal_num = st.number_input("‡∏õ‡πâ‡∏≠‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°:", value=0, step=1)
         if st.button('‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏•‡∏Ç'):
            ternary_num = decimal_to_ternary(decimal_num)
            st.write(f"‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°‡∏Ç‡∏≠‡∏á {decimal_num} ‡∏Ñ‡∏∑‡∏≠: {ternary_num}")

        # ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏•‡∏Ç‡∏ê‡∏≤‡∏ô
        elif option == "‡∏ê‡∏≤‡∏ô‡∏™‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°":
         ternary_num = st.text_input("‡∏õ‡πâ‡∏≠‡∏ô‡πÄ‡∏•‡∏Ç‡∏ê‡∏≤‡∏ô‡∏™‡∏≤‡∏°:")
         if st.button('‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏•‡∏Ç'):
            decimal_num = ternary_to_decimal(ternary_num)
            st.write(f"‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°‡∏Ç‡∏≠‡∏á {ternary_num} ‡∏Ñ‡∏∑‡∏≠: {decimal_num}")
 
    if menu_option == '‡πÄ‡∏•‡∏Ç‡∏ê‡∏≤‡∏ô8':
         st.title(":red[‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏•‡∏Ç‡∏ê‡∏≤‡∏ô‡πÅ‡∏õ‡∏î]")

         # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡πâ‡∏≠‡∏ô
         option = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:", ["‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ê‡∏≤‡∏ô‡πÅ‡∏õ‡∏î", "‡∏ê‡∏≤‡∏ô‡πÅ‡∏õ‡∏î‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°"])

         # ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏•‡∏Ç‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°
         if option == "‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ê‡∏≤‡∏ô‡πÅ‡∏õ‡∏î":
           decimal_num = st.number_input("‡∏õ‡πâ‡∏≠‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°:", value=0, step=1)
           if st.button('‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏•‡∏Ç'):
                octal_num = decimal_to_octal(decimal_num)
                st.write(f"‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°‡∏Ç‡∏≠‡∏á {decimal_num} ‡∏Ñ‡∏∑‡∏≠: {octal_num}")

         # ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏•‡∏Ç‡∏ê‡∏≤‡∏ô      
         elif option == "‡∏ê‡∏≤‡∏ô‡πÅ‡∏õ‡∏î‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°":
            octal_num = st.text_input("‡∏õ‡πâ‡∏≠‡∏ô‡πÄ‡∏•‡∏Ç‡∏ê‡∏≤‡∏ô‡πÅ‡∏õ‡∏î:")
            if st.button('‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏•‡∏Ç'):
                decimal_num =decimal_to_octall(octal_num)
                st.write(f"‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°‡∏Ç‡∏≠‡∏á {octal_num} ‡∏Ñ‡∏∑‡∏≠: {decimal_num}")
 
    if menu_option == '‡πÄ‡∏•‡∏Ç‡∏ê‡∏≤‡∏ô16':
        st.title(":red[‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏•‡∏Ç‡∏ê‡∏≤‡∏ô‡∏™‡∏¥‡∏ö‡∏´‡∏Å]") 

        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡πâ‡∏≠‡∏ô
        option = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:", ["‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ê‡∏≤‡∏ô‡∏™‡∏¥‡∏ö‡∏´‡∏Å", "‡∏ê‡∏≤‡∏ô‡∏™‡∏¥‡∏ö‡∏´‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°"])

        # ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏•‡∏Ç‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°
        if option == "‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ê‡∏≤‡∏ô‡∏™‡∏¥‡∏ö‡∏´‡∏Å":
         decimal_num = st.number_input("‡∏õ‡πâ‡∏≠‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°:", value=0, step=1)
         if st.button('‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏•‡∏Ç'):
            hexadecimal_num = decimal_to_hexadecimal(decimal_num)
            st.write(f"‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°‡∏Ç‡∏≠‡∏á {decimal_num} ‡∏Ñ‡∏∑‡∏≠: {hexadecimal_num}")

        # ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏•‡∏Ç‡∏ê‡∏≤‡∏ô
        elif option == "‡∏ê‡∏≤‡∏ô‡∏™‡∏¥‡∏ö‡∏´‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°":
         hexadecimal_num = st.text_input("‡∏õ‡πâ‡∏≠‡∏ô‡πÄ‡∏•‡∏Ç‡∏ê‡∏≤‡∏ô‡∏™‡∏¥‡∏ö‡∏´‡∏Å:")
         if st.button('‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏•‡∏Ç'):
            decimal_num = hexadecimal_to_decimal(hexadecimal_num)
            st.write(f"‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°‡∏Ç‡∏≠‡∏á {hexadecimal_num} ‡∏Ñ‡∏∑‡∏≠: {decimal_num}")
if __name__ == "__main__":
    main()
